// SPDX-License-Identifier: GPL-2.0
/*
 * Chip data for ssc8336
 */

#ifndef DRIVERS_PINCTRL_MSTAR_PINCTRL_MSC313_SSC8336_H_
#define DRIVERS_PINCTRL_MSTAR_PINCTRL_MSC313_SSC8336_H_

#ifdef CONFIG_MACH_MERCURY
static const char * const sr0_mipi_groups[]  = { GROUPNAME_SR0_MIPI_MODE1, GROUPNAME_SR0_MIPI_MODE2};
static const u16	  sr0_mipi_values[]  = { BIT(8), BIT(9) };
static const char * const sr1_bt656_groups[] = { GROUPNAME_SR1_BT656 };
static const u16	  sr1_bt656_values[] = { BIT(12) };
static const char * const sr1_mipi_groups[]  = { GROUPNAME_SR1_MIPI_MODE4 };
static const u16	  sr1_mipi_values[]  = { BIT(15) };

static const char * const tx_mipi_groups[] = { GROUPNAME_TX_MIPI_MODE1, GROUPNAME_TX_MIPI_MODE2 };
static const u16	  tx_mipi_values[] = { BIT(0), BIT(1) };
#endif

#ifdef CONFIG_MACH_MERCURY
/* ssc8336 */
#define SSC8336N_COMMON_PIN(_pinname) COMMON_PIN(SSC8336N, _pinname)

/* pinctrl pins */
static const struct pinctrl_pin_desc ssc8336n_pins[] = {
	SSC8336N_COMMON_PIN(USB_DM1),
	SSC8336N_COMMON_PIN(USB_DP1),
	SSC8336N_COMMON_PIN(USB_DM),
	SSC8336N_COMMON_PIN(USB_DP),
	SSC8336N_COMMON_PIN(USB_CID),
	SSC8336N_COMMON_PIN(FUART_RX),
	SSC8336N_COMMON_PIN(FUART_TX),
	SSC8336N_COMMON_PIN(FUART_CTS),
	SSC8336N_COMMON_PIN(FUART_RTS),
	SSC8336N_COMMON_PIN(SPI0_DO),
	SSC8336N_COMMON_PIN(SPI0_DI),
	SSC8336N_COMMON_PIN(SPI0_CK),
	SSC8336N_COMMON_PIN(SPI0_CZ),
	SSC8336N_COMMON_PIN(SPI0_CZ1),
	SSC8336N_COMMON_PIN(I2C0_SCL),
	SSC8336N_COMMON_PIN(I2C0_SDA),
	SSC8336N_COMMON_PIN(SD_D1),
	SSC8336N_COMMON_PIN(SD_D0),
	SSC8336N_COMMON_PIN(SD_CLK),
	SSC8336N_COMMON_PIN(SD_CMD),
	SSC8336N_COMMON_PIN(SD_D3),
	SSC8336N_COMMON_PIN(SD_D2),
	SSC8336N_COMMON_PIN(SR0_D2),
	SSC8336N_COMMON_PIN(SR0_D3),
	SSC8336N_COMMON_PIN(SR0_D4),
	SSC8336N_COMMON_PIN(SR0_D5),
	SSC8336N_COMMON_PIN(SR0_D6),
	SSC8336N_COMMON_PIN(SR0_D7),
	SSC8336N_COMMON_PIN(SR0_D8),
	SSC8336N_COMMON_PIN(SR0_D9),
	SSC8336N_COMMON_PIN(SR0_D10),
	SSC8336N_COMMON_PIN(SR0_D11),
	SSC8336N_COMMON_PIN(SR0_GPIO0),
	SSC8336N_COMMON_PIN(SR0_GPIO1),
	SSC8336N_COMMON_PIN(SR0_GPIO2),
	SSC8336N_COMMON_PIN(SR0_GPIO3),
	SSC8336N_COMMON_PIN(SR0_GPIO4),
	SSC8336N_COMMON_PIN(SR0_GPIO5),
	SSC8336N_COMMON_PIN(SR0_GPIO6),
	SSC8336N_COMMON_PIN(SR1_GPIO0),
	SSC8336N_COMMON_PIN(SR1_GPIO1),
	SSC8336N_COMMON_PIN(SR1_GPIO2),
	SSC8336N_COMMON_PIN(SR1_GPIO3),
	SSC8336N_COMMON_PIN(SR1_GPIO4),
	SSC8336N_COMMON_PIN(SR1_D0P),
	SSC8336N_COMMON_PIN(SR1_D0N),
	SSC8336N_COMMON_PIN(SR1_CKP),
	SSC8336N_COMMON_PIN(SR1_CKN),
	SSC8336N_COMMON_PIN(SR1_D1P),
	SSC8336N_COMMON_PIN(SR1_D1N),
	SSC8336N_COMMON_PIN(LCD_HSYNC),
	SSC8336N_COMMON_PIN(LCD_VSYNC),
	SSC8336N_COMMON_PIN(LCD_PCLK),
	SSC8336N_COMMON_PIN(LCD_DE),
	SSC8336N_COMMON_PIN(LCD_0),
	SSC8336N_COMMON_PIN(LCD_1),
	SSC8336N_COMMON_PIN(LCD_2),
	SSC8336N_COMMON_PIN(LCD_3),
	SSC8336N_COMMON_PIN(LCD_4),
	SSC8336N_COMMON_PIN(LCD_5),
	SSC8336N_COMMON_PIN(LCD_6),
	SSC8336N_COMMON_PIN(LCD_7),
	SSC8336N_COMMON_PIN(LCD_8),
	SSC8336N_COMMON_PIN(LCD_9),
	SSC8336N_COMMON_PIN(LCD_10),
	SSC8336N_COMMON_PIN(LCD_11),
	SSC8336N_COMMON_PIN(LCD_12),
	SSC8336N_COMMON_PIN(LCD_13),
	SSC8336N_COMMON_PIN(LCD_14),
	SSC8336N_COMMON_PIN(LCD_15),
};

/* mux pin groupings */
/* i2c0 */
static const int ssc8336n_i2c0_mode1_pins[] = {
	PIN_SSC8336N_I2C0_SCL,
	PIN_SSC8336N_I2C0_SDA,
};
/* i2c1 */
static const int ssc8336n_i2c1_mode1_pins[] = {
	PIN_SSC8336N_SR0_GPIO0,
	PIN_SSC8336N_SR0_GPIO1,
};
static const int ssc8336n_usb_pins[] = {
	PIN_SSC8336N_USB_DM,
	PIN_SSC8336N_USB_DP,
};
static const int ssc8336n_usb1_pins[] = {
	PIN_SSC8336N_USB_DM1,
	PIN_SSC8336N_USB_DP1,
};

/* sdio */
static const int ssc8336n_sdio_mode1_pins[] = {
	PIN_SSC8336N_SD_CLK,
	PIN_SSC8336N_SD_CMD,
	PIN_SSC8336N_SD_D0,
	PIN_SSC8336N_SD_D1,
	PIN_SSC8336N_SD_D2,
	PIN_SSC8336N_SD_D3,
};
static const int ssc8336n_fuart_mode1_pins[] = {
	PIN_SSC8336N_FUART_RX,
	PIN_SSC8336N_FUART_TX,
	PIN_SSC8336N_FUART_CTS,
	PIN_SSC8336N_FUART_RTS,
};
static const int ssc8336n_lcd_d0_to_d9_pins[]  = {
	PIN_SSC8336N_LCD_0,
	PIN_SSC8336N_LCD_1,
	PIN_SSC8336N_LCD_2,
	PIN_SSC8336N_LCD_3,
	PIN_SSC8336N_LCD_4,
	PIN_SSC8336N_LCD_5,
	PIN_SSC8336N_LCD_6,
	PIN_SSC8336N_LCD_7,
	PIN_SSC8336N_LCD_8,
	PIN_SSC8336N_LCD_9,
};

static const int ssc8336n_sr0_d2_to_d11_pins[] = {
	PIN_SSC8336N_SR0_D2,
	PIN_SSC8336N_SR0_D3,
	PIN_SSC8336N_SR0_D4,
	PIN_SSC8336N_SR0_D5,
	PIN_SSC8336N_SR0_D6,
	PIN_SSC8336N_SR0_D7,
	PIN_SSC8336N_SR0_D8,
	PIN_SSC8336N_SR0_D9,
	PIN_SSC8336N_SR0_D10,
	PIN_SSC8336N_SR0_D11,
};

#define SR0_MIPI_COMMON	PIN_SSC8336N_SR0_GPIO2, \
			PIN_SSC8336N_SR0_GPIO3, \
			PIN_SSC8336N_SR0_GPIO4, \
			PIN_SSC8336N_SR0_D2, \
			PIN_SSC8336N_SR0_D3, \
			PIN_SSC8336N_SR0_D4, \
			PIN_SSC8336N_SR0_D5, \
			PIN_SSC8336N_SR0_D6, \
			PIN_SSC8336N_SR0_D7

static const int ssc8336n_sr0_mipi_mode1_pins[] = {
	SR0_MIPI_COMMON,
};

static const int ssc8336n_sr0_mipi_mode2_pins[] = {
	SR0_MIPI_COMMON,
	PIN_SSC8336N_SR0_D8,
	PIN_SSC8336N_SR0_D9,
	PIN_SSC8336N_SR0_D10,
	PIN_SSC8336N_SR0_D11,
};

static const int ssc8336n_sr1_bt656_pins[] = {
	PIN_SSC8336N_SR1_GPIO0,
	PIN_SSC8336N_SR1_GPIO1,
	PIN_SSC8336N_SR1_GPIO2,
	PIN_SSC8336N_SR1_GPIO3,
	PIN_SSC8336N_SR1_GPIO4,
};
/* incomplete */
static const int ssc8336n_sr1_mipi_mode4_pins[] = {
	PIN_SSC8336N_SR1_D0P,
	PIN_SSC8336N_SR1_D0N,
	PIN_SSC8336N_SR1_CKP,
	PIN_SSC8336N_SR1_CKN,
	PIN_SSC8336N_SR1_D1P,
	PIN_SSC8336N_SR1_D1N,
};

#define TX_MIPI_COMMON_PINS	PIN_SSC8336N_LCD_0, \
				PIN_SSC8336N_LCD_1, \
				PIN_SSC8336N_LCD_2, \
				PIN_SSC8336N_LCD_3, \
				PIN_SSC8336N_LCD_4, \
				PIN_SSC8336N_LCD_5

static const int ssc8336n_tx_mipi_mode1_pins[] = {
	TX_MIPI_COMMON_PINS
};

static const int ssc8336n_tx_mipi_mode2_pins[] = {
	TX_MIPI_COMMON_PINS,
	PIN_SSC8336N_LCD_6,
	PIN_SSC8336N_LCD_7,
	PIN_SSC8336N_LCD_8,
	PIN_SSC8336N_LCD_9,
};

#define SSC8336N_PINCTRL_GROUP(_NAME, _name) MSTAR_PINCTRL_GROUP(GROUPNAME_##_NAME, ssc8336n_##_name##_pins)

/* pinctrl groups */
#define GROUPNAME_LCD_DO_TO_D9	"lcd_d0_to_d9"
#define GROUPNAME_SR0_D2_TO_D11	"sr0_d2_to_d11"

static const struct msc313_pinctrl_group ssc8336n_pinctrl_groups[] = {
	SSC8336N_PINCTRL_GROUP(I2C0_MODE1, i2c0_mode1),
	SSC8336N_PINCTRL_GROUP(I2C1_MODE1, i2c1_mode1),
	SSC8336N_PINCTRL_GROUP(USB, usb),
	SSC8336N_PINCTRL_GROUP(USB1, usb1),
	SSC8336N_PINCTRL_GROUP(SDIO_MODE1, sdio_mode1),
	SSC8336N_PINCTRL_GROUP(FUART_MODE1, fuart_mode1),
	SSC8336N_PINCTRL_GROUP(LCD_DO_TO_D9, lcd_d0_to_d9),
	SSC8336N_PINCTRL_GROUP(SR0_D2_TO_D11, sr0_d2_to_d11),
	SSC8336N_PINCTRL_GROUP(SR0_MIPI_MODE1, sr0_mipi_mode1),
	SSC8336N_PINCTRL_GROUP(SR0_MIPI_MODE2, sr0_mipi_mode2),
	SSC8336N_PINCTRL_GROUP(SR1_BT656, sr1_bt656),
	SSC8336N_PINCTRL_GROUP(SR1_MIPI_MODE4, sr1_mipi_mode4),
	SSC8336N_PINCTRL_GROUP(TX_MIPI_MODE1, tx_mipi_mode1),
	SSC8336N_PINCTRL_GROUP(TX_MIPI_MODE2, tx_mipi_mode2),
};

#define SSC8336N_FUNCTION(_NAME, _name) \
	MSTAR_PINCTRL_FUNCTION(FUNCTIONNAME_##_NAME, REG_SSC8336N_##_NAME, \
	MASK_SSC8336N_##_NAME, ssc8336n_##_name##_groups, ssc8336n_##_name##_values)

static const struct msc313_pinctrl_function ssc8336n_pinctrl_functions[] = {
	COMMON_FUNCTIONS,
	COMMON_FUNCTION(SR0_MIPI, sr0_mipi),
	COMMON_FUNCTION(SR1_BT656, sr1_bt656),
	COMMON_FUNCTION(SR1_MIPI, sr1_mipi),
	COMMON_FUNCTION(TX_MIPI, tx_mipi),
	COMMON_FIXED_FUNCTION(USB1, usb1)
};

static const struct msc313_pinctrl_pinconf ssc8336n_configurable_pins[] = {
};

MSTAR_PINCTRL_INFO(ssc8336n);
#endif /* mercury5 */

#endif /* DRIVERS_PINCTRL_MSTAR_PINCTRL_MSC313_SSC8336_H_ */
